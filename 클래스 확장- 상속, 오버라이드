클래스 확장이란 기존 클래스에 무엇인가 추가해서 새로운 클래스를 만드는 것. 이를 상속이라고 부른다.
상속은 부모(상위 클래스)의 것을 자식(하위 클래스)에게 물려주는 것이라고 말할 수 있다.
class 특별세트 extends 참치선물세트 {
}
부모인 참치선물세트를 물려 받아 햄과 카놀라유가 추가된 자식 특별세트가 완성된다.
하위 클래스는 클래스를 선언할 때 아무런 내용을 안 쓰더라도 부모 클래스의 변수와 메서드를 사용할 수 있다. -이게 물려받는 개념.
이떄 부모클래스를 슈퍼 클래스라고도 부른다. 여기서 슈퍼는 '위에 있는' 이라는 의미이다.

상속 받은 클래스에서 super라는 단어는 슈퍼클래스의 생성자를 호출한다.
슈퍼클래스에서 정의된 메서드를 서브클래스에서 같은 이름의 메서드로 다시 정의하는 걸 오버라이드(override) 라고 한다.
상속받은 메서드와 이름은 같지만 내용이 다른 메서드이다.
출력의 결과가 상속받은 메서드 뿐만 아니라 다른 것까지 출력된다.
오버라이드는 덮어쓰기를 의미하는데 슈퍼클래스의 메서드와 이름이 동일한 메서드를 만든다고 생각하면 된다.

상속과 관련된 내용은 아니지만 오버라이드와 이름이 비슷한 오버로딩은 과적하다, 과부하가 걸리게하다 라는 뜻을 가진 단어이다.
프로그래밍에서 오버로딩은 같은 이름의 메서드에 다른 변수를 더한 메서드를 만든다는 의미이다. 즉 별도의 메서드가 하나 더 생긴 것이다.

package phj.test01;

public class CleanSet extends Clean {
	int 면도기;
	
	CleanSet(int 면도기, int 칫솔, int 치약, int 샴푸, int 바디워시, int 린스,int 비누){	//생성자
		super(칫솔, 치약, 샴푸, 바디워시, 린스, 비누);
		this.면도기 = 면도기;
	}
	 @Override
	 public String toString() {		//Override
		 return "면도기: " + 면도기 + ", 칫솔: " + 칫솔 + ", 치약: " + 치약 + ", 샴푸: " + 샴푸 + ", 바디워시: " + 바디워시 + ", 린스: " + 린스 + ", 비누: " + 비누;
	}
}

package phj.test01;

public class CleanSetMain {

	public static void main(String[] args) {
		CleanSet cs1 = new CleanSet(1, 2, 4, 3, 4, 3, 1);	//특별세트1호 인스턴스
		System.out.println("명절 특별세트 1호 구성: ");
		System.out.println(cs1);
	}
}
